global.httpclient.pool.connection_lifetime_seconds=-1

#- ThreadSafeClientConnManager maintains a maximum limit of connection on a per
#- route basis and in total. Per default this implementation will create no more
#- than than 2 concurrent connections per given route and no more 20 connections
#- in total.
global.httpclient.pool.default_max_per_route=100
global.httpclient.pool.max_total=1000


#- Activates 'Expect: 100-Continue' handshake for the entity enclosing methods.
#- The purpose of the 'Expect: 100-Continue' handshake is to allow a client that
#- is sending a request message with a request body to determine if the origin
#- server is willing to accept the request (based on the request headers) before
#- the client sends the request body.
#- The use of the 'Expect: 100-continue' handshake can result in a noticeable
#- performance improvement for entity enclosing requests (such as POST and PUT)
#- that require the target server's authentication.
#- 'Expect: 100-continue' handshake should be used with caution, as it may cause
#- problems with HTTP servers and proxies that do not support HTTP/1.1 protocol.
global.httpclient.protocol.use_expect_continue=false

#- Defines the maximum period of time in milliseconds the client should spend
#- waiting for a 100-continue response
global.httpclient.protocol.wait_for_continue_ms=20000



global.httpclient.connection.tcp_nodelay=true


#- Defines the socket timeout (SO_TIMEOUT) in milliseconds, which is the timeout
#- for waiting for data or, put differently, a maximum period inactivity between
#- two consecutive data packets). A timeout value of zero is interpreted as an
#- infinite timeout.
global.httpclient.connection.so_timeout_ms=30000


#- Sets SO_LINGER with the specified linger time in seconds. The maximum timeout
#- value is platform specific. Value 0 implies that the option is disabled.
#- Value -1 implies that the JRE default is used. The setting only affects the
#- socket close operation.
global.httpclient.connection.so_linger_ms=-1

#- Defines whether the socket can be bound even though a previous connection is
#- still in a timeout state.
global.httpclient.connection.so_reuseaddr=true

#- Determines the size of the internal socket buffer used to buffer data while
#- receiving / transmitting HTTP messages.
global.httpclient.connection.socket_buffer_size=2048


#- Determines the timeout in milliseconds until a connection is established. A
#- timeout value of zero is interpreted as an infinite timeout.
#- Please note this parameter can only be applied to connections that are bound
#- to a particular local address.
global.httpclient.connection.connection_timeout_ms=30000

#- Determines the maximum line length limit. If set to a positive value, any
#- HTTP line exceeding this limit will cause an IOException. A negative or zero
#- value will effectively disable the check.
global.httpclient.connection.max_line_length=0

#- Determines the maximum HTTP header count allowed. If set to a positive value,
#- the number of HTTP headers received from the data stream exceeding this limit
#- will cause an IOException. A negative or zero value will effectively disable
#- the check.
global.httpclient.connection.max_header_count=0

#- Determines whether stale connection check is to be used. The stale connection
#- check can cause up to 30 millisecond overhead per request and should be used
#- only when appropriate. For performance critical operations this check should
#- be disabled.
global.httpclient.connection.stale_connection_check=false


#- Set up maximum retries if a request fails
#- Currently only two types of exception is allowed to retry:
#- NoHttpResponseException and ClientProtocolException
global.httpclient.execution.retry_count=3



#! Self-implemented health check mechanism in HttpClientUtil.Client class
global.httpclient.execution.health_check_period_seconds=10

